{"version":3,"sources":["shared/images/profil3.png","shared/images/kamera.png","components/card/Card.tsx","components/message/Message.tsx","components/products/Products.tsx","components/home/Home.tsx","components/contact/Contact.tsx","components/navbar/NavBar.tsx","services/ProductService.ts","components/productdetails/ProductDetails.tsx","components/nopage/NoPage.tsx","components/cartitem/CartItem.tsx","components/cart/Cart.tsx","components/checkout/Checkout.tsx","App.tsx","serviceWorker.ts","index.tsx","shared/images/frulle.gif"],"names":["module","exports","Card","props","className","src","image","alt","name","title","length","substr","price","Message","children","Products","state","products","loading","hasError","errorText","notFound","search","category","this","fetchProducts","prevProps","toggledReload","setState","e","target","value","preventDefault","searchText","categoryId","Number","url","service","getProducts","resultTuple","fetchedProducts","errorMessage","filteredProducts","forEach","item","genre_ids","genre","push","Fragment","poster_path","forms","onSubmit","handleSearchSubmit","type","placeholder","onChange","handleSearchChange","required","handleCategorySubmit","handleCategoryChange","addErrorMessage","to","onClick","onReload","tape","map","id","key","getImageUrl","React","Component","Home","Contact","profile","NavBar","numItems","cartItems","quantity","Navbar","expand","camera","Toggle","aria-controls","Collapse","Nav","calculateNumItems","ProductService","axios","get","data","results","console","log","message","response","status","product","ProductDetails","defaultProduct","overview","release_date","useState","setLoading","setHasError","setErrorText","setProduct","useParams","useEffect","a","getProduct","fetchedProduct","fetchProduct","onAddToCart","NoPage","CartItem","onRemove","cartItem","num","newQuantity","newTotal","updatedCartItem","totalPrice","onUpdateQuantity","handleUpdateQuantity","handleRemove","bind","Cart","total","calculateTotal","Checkout","information","order","companyId","created","createdBy","paymentMethod","orderRows","isSuccessful","ProductId","Amount","updatedOrder","Date","toLocaleString","createOrderRows","onClearCart","handleSubmit","handleChange","checked","App","productService","retrieveList","handleAddToCart","handleRemoveFromCart","handleClearCart","handleReload","addedProduct","isInCart","updatedCartItems","storeList","removedCartItem","filter","idx","splice","clearedCart","arr","storageName","Storage","sessionStorage","setItem","JSON","stringify","getItem","tempList","temp","parse","newStatus","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.96e56722.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profil3.c4ef6463.png\";","module.exports = __webpack_public_path__ + \"static/media/kamera.31b786b9.png\";","import React from \"react\";\r\nimport './card.scss';\r\n\r\ninterface ICardProps {\r\n    image: string;\r\n    name: string;\r\n    price: number;\r\n}\r\n\r\nexport default function Card(props: ICardProps){\r\n\r\n\r\n    function getEditedTitle(title: string): string{\r\n        if(title.length > 60){\r\n            title = title.substr(0, 58) + '...';\r\n        }\r\n        return title;\r\n    }\r\n\r\n\r\n\r\n    return( \r\n        <div className=\"card\" >\r\n            <div className=\"card-image\">\r\n                 \r\n            <img src={props.image} alt={props.name}></img>\r\n                \r\n            </div>\r\n            <div title={props.name} className=\"card-title\">\r\n                {getEditedTitle(props.name)}\r\n            </div>\r\n            <div className=\"card-price\"><b>{props.price}</b> kr</div>\r\n        </div>   \r\n    );\r\n}","import React from \"react\";\r\nimport './message.scss';\r\n\r\n\r\ninterface IMessageProps {\r\n    children: React.ReactNode;\r\n} \r\n\r\n\r\nexport default function Message(props: IMessageProps) {\r\n\r\n    return(\r\n        <div className=\"message\">\r\n            <div>{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './products.scss';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport tape from '../../shared/images/frulle.gif';\r\nimport IProduct from \"../../interfaces/iproduct\";\r\nimport { IProductService } from \"../../services/ProductService\";\r\nimport Card from \"../card/Card\";\r\nimport Message from \"../message/Message\";\r\n\r\n\r\ninterface IProductProps {\r\n    service: IProductService;\r\n    onReload(): void;\r\n    toggledReload: boolean;\r\n}\r\n\r\n\r\ninterface IProductState {\r\n    products: IProduct[];\r\n    loading: boolean;\r\n    hasError: boolean;\r\n    errorText: string;\r\n    notFound: boolean;\r\n    search: string;\r\n    category: string;\r\n}\r\n\r\n\r\n\r\nexport default class Products extends React.Component<IProductProps, IProductState> {\r\n    constructor(props: IProductProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            products: [],\r\n            loading: false,\r\n            hasError: false,\r\n            errorText: '',\r\n            notFound: false,\r\n            search: '',\r\n            category: ''\r\n        };\r\n        \r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        this.fetchProducts('https://api.themoviedb.org/3/movie/top_rated?api_key=c1f020d606cc9bf578a920d153a7c8e2&language=en-US&page=1'); \r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps: IProductProps) {\r\n        //on link or navbar click current page\r\n        if(this.props.toggledReload !== prevProps.toggledReload){\r\n            this.setState({\r\n                hasError: false,\r\n                errorText: '',\r\n                notFound: false\r\n            });\r\n            this.fetchProducts('https://api.themoviedb.org/3/movie/top_rated?api_key=c1f020d606cc9bf578a920d153a7c8e2&language=en-US&page=1');    \r\n        }\r\n    }\r\n\r\n\r\n    handleSearchChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({\r\n            search: e.target.value \r\n        });\r\n    }\r\n\r\n\r\n    handleSearchSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        let searchText = this.state.search;\r\n        this.setState({\r\n            hasError: false,\r\n            errorText: '',\r\n            notFound: false,\r\n            search: ''\r\n        });\r\n        this.fetchProducts(`https://api.themoviedb.org/3/search/movie?api_key=c1f020d606cc9bf578a920d153a7c8e2&language=en-US&query=${searchText}%20&page=1&include_adult=false`);    \r\n    }\r\n\r\n\r\n    handleCategoryChange(e: React.ChangeEvent<HTMLSelectElement>){\r\n        this.setState({\r\n            category: e.target.value\r\n        });\r\n    }\r\n\r\n    handleCategorySubmit(e: React.FormEvent<HTMLFormElement>){\r\n        e.preventDefault();\r\n        let categoryId = Number(this.state.category);\r\n        this.setState({\r\n            hasError: false,\r\n            errorText: '',\r\n            notFound: false,\r\n            search: ''\r\n        });\r\n        this.fetchProducts(`https://api.themoviedb.org/3/movie/top_rated?api_key=c1f020d606cc9bf578a920d153a7c8e2&language=en-US&page=4`, categoryId);\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    async fetchProducts(url: string, categoryId: number = 0){\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const resultTuple: [IProduct[], string] = await this.props.service.getProducts(url);\r\n        const fetchedProducts: IProduct[] = resultTuple[0];\r\n        let errorMessage: string = resultTuple[1];\r\n        if(fetchedProducts.length){\r\n            if(categoryId > 0){\r\n                //If second parameter category id was given\r\n                const filteredProducts: IProduct[] = [];\r\n                fetchedProducts.forEach((item: IProduct)=>{\r\n                    item.genre_ids.forEach((genre: number)=>{\r\n                        if(genre === categoryId){\r\n                            filteredProducts.push(item);\r\n                        }\r\n                    });   \r\n                })\r\n                this.setState({\r\n                    products: filteredProducts,\r\n                    loading: false\r\n                });\r\n            }\r\n            else{\r\n                //No category filter\r\n                this.setState({\r\n                    products: fetchedProducts,\r\n                    loading: false\r\n                });  \r\n            }               \r\n        }\r\n        else if(errorMessage){\r\n            this.setState({\r\n                hasError: true,\r\n                errorText: errorMessage,\r\n                loading: false\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                notFound: true,\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    addErrorMessage(): JSX.Element{\r\n        let message =  <React.Fragment>\r\n            <h4>Oops! Something went wrong</h4>\r\n            <p>{this.state.errorText}</p>\r\n        </React.Fragment>;\r\n        return message;\r\n    }\r\n\r\n\r\n    getImageUrl(item: IProduct): string{\r\n        if(item.poster_path){\r\n            return `https://image.tmdb.org/t/p/w185${item.poster_path}`;\r\n        }\r\n        return 'https://i.postimg.cc/9MbvYYpr/kamera2.png';\r\n    }\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n    render() {\r\n\r\n        const forms = <div className=\"form-container\">\r\n            <form className=\"search-form\" onSubmit={(e)=>this.handleSearchSubmit(e)}>\r\n                <input type=\"text\" placeholder=\"Movie title\" name=\"search\" value={this.state.search} onChange={(e)=>this.handleSearchChange(e)} required></input>\r\n                <button type=\"submit\" className=\"movie-shop-button\">Search</button>\r\n            </form>\r\n            <form className=\"category-form\" onSubmit={(e)=>this.handleCategorySubmit(e)}>\r\n                <span>Category:&nbsp;</span> \r\n                <select value={this.state.category} onChange={(e)=>this.handleCategoryChange(e)}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"28\">Action</option>\r\n                    <option value=\"53\">Thriller</option>\r\n                    <option value=\"35\">Comedy</option>\r\n                    <option value=\"878\">Sci-fi</option>\r\n                </select>\r\n                <button type=\"submit\" className=\"movie-shop-button\">Filter</button>\r\n            </form>\r\n        </div>; \r\n        \r\n        \r\n        \r\n        if(this.state.hasError){\r\n            return(\r\n                <div className=\"products\">\r\n                    {forms}\r\n                    <Message>{this.addErrorMessage()}</Message> \r\n                    <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\" onClick={this.props.onReload}>Back to Products</span></Link>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if(this.state.notFound){\r\n            return(\r\n                <div className=\"products\">\r\n                    {forms}\r\n                    <Message>Product not found</Message> \r\n                    <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\" onClick={this.props.onReload}>Back to Products</span></Link>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if(this.state.loading) {\r\n            return (\r\n                <div className=\"wait-wrapper\"><div><img src={tape} alt=\"loading\"></img></div></div>\r\n            );\r\n        } \r\n\r\n        return (\r\n        <div>\r\n            {forms}\r\n            <div className=\"product-wrapper\">\r\n                    {this.state.products.map(item => {\r\n\r\n                        return (<Link to={`/products/${item.id}`} className=\"product-link\" key={item.id}>\r\n                            <Card image={this.getImageUrl(item)} name={item.title} price={200}/>\r\n                        </Link>\r\n                        );\r\n   \r\n                    })}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './home.scss';\r\nimport Products from '../products/Products';\r\nimport { IProductService } from '../../services/ProductService';\r\n\r\n\r\ninterface IHomeProps {\r\n    service: IProductService;\r\n    onReload(): void;\r\n    toggledReload: boolean;\r\n}\r\n \r\nfunction Home(props: IHomeProps) {\r\n    return (\r\n        <div className='home'>\r\n            <h2>Movie Shop</h2>\r\n            <Products service={props.service} toggledReload={props.toggledReload} onReload={props.onReload}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport './contact.scss';\r\nimport profile from '../../shared/images/profil3.png';\r\n\r\n \r\nfunction Contact() {\r\n    return (\r\n        <div className='contact'>\r\n            <h2>Contact</h2>\r\n\r\n            <div className=\"contact-info\"><img src={profile} alt=\"profile\"></img><span>rosi.drott@gmail.com</span></div>\r\n        \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Contact;","// Warning: findDOMNode is deprecated in StrictMode when using react-bootstrap Navbar\r\n// warning when clicking hamburger button\r\nimport React from 'react';\r\nimport './navbar.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport camera from '../../shared/images/kamera.png';\r\nimport { ICartItem } from '../../interfaces/icartitem';\r\n\r\n\r\ninterface INavBarProps {\r\n  cartItems: ICartItem[];\r\n  onReload(): void;\r\n}\r\n\r\n\r\n\r\nclass NavBar extends React.Component<INavBarProps, {}> {\r\n  \r\n\r\n  calculateNumItems(): number {\r\n    let numItems: number = 0;\r\n    this.props.cartItems.forEach((item)=>{\r\n      numItems += item.quantity;\r\n    });\r\n    return numItems;\r\n  }\r\n\r\n\r\n  \r\n    \r\n  render(){\r\n\r\n    return (\r\n      \r\n      <Navbar expand=\"lg\" className=\"mynav\">\r\n        <Link to=\"/\" className=\"nav-link logo\" onClick={this.props.onReload}><img src={camera} alt=\"logotype\"></img></Link>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/\" className=\"nav-link\" onClick={this.props.onReload}>Home</Link>\r\n            <Link to=\"/products\" className=\"nav-link\" onClick={this.props.onReload}>Products</Link>\r\n            <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\r\n          </Nav>\r\n          \r\n            <div className=\"basket\">\r\n              <span className=\"basket-number\">{this.calculateNumItems()}</span><Link to=\"/cart\" className=\"basket-icon\"><span>&#128722;</span></Link>\r\n            </div>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\n  \r\nexport default NavBar;","import axios, { AxiosResponse } from 'axios';\r\nimport IProduct from '../interfaces/iproduct';\r\n\r\nexport interface IProductService {\r\n    getProducts(url: string): Promise<[IProduct[], string]>;\r\n    getProduct(url: string): Promise<[IProduct | null, string]>;\r\n}\r\n\r\n\r\n\r\nexport class ProductService implements IProductService {\r\n    \r\n    \r\n\r\n    async getProducts(url: string): Promise<[IProduct[], string]> {\r\n        let products: IProduct[] = [];\r\n        let errorText: string = '';\r\n        \r\n        try{\r\n            let data: AxiosResponse<any> = await axios.get(url);\r\n            if(data.data){\r\n                //console.log(data.data.results);\r\n                products = data.data.results;\r\n            }      \r\n        }catch(e){\r\n            console.log(\"message: \"+e.message);\r\n            errorText = e.message;\r\n            if(e.response){\r\n                console.log(\"status: \"+e.response.status);\r\n            }        \r\n        }\r\n        let resultTuple: [IProduct[], string] = [products, errorText];    \r\n        return resultTuple;\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    async getProduct(url: string): Promise<[IProduct | null, string]> {\r\n\r\n        let product: IProduct | null = null;\r\n        let errorText: string = '';\r\n        try{\r\n            let response: AxiosResponse<any> = await axios.get(url);\r\n            if(response.data){\r\n                //console.log(response.data);\r\n                product = response.data;\r\n            }\r\n        }catch(e){\r\n            console.log(\"message: \"+e.message);\r\n            errorText = e.message;\r\n            if(e.response){\r\n                console.log(\"status: \"+e.response.status);\r\n            } \r\n        }\r\n        let resultTuple: [IProduct | null, string] = [product, errorText];   \r\n        return resultTuple;\r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './productdetails.scss';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport tape from '../../shared/images/frulle.gif';\r\nimport IProduct from '../../interfaces/iproduct';\r\nimport { IProductService, ProductService } from '../../services/ProductService';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../message/Message';\r\n\r\n\r\n\r\n\r\ninterface IProductDetailsProps {\r\n    onAddToCart(product: IProduct): void;\r\n}\r\n\r\n\r\nexport default function ProductDetails(props: IProductDetailsProps) {\r\n\r\n    const categories: number[] = [];\r\n\r\n    const defaultProduct = {\r\n        title: '',\r\n        id: 0,\r\n        overview: '',\r\n        poster_path: '',\r\n        release_date: '',\r\n        genre_ids: categories\r\n    }\r\n\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [hasError, setHasError] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n    const [product, setProduct] = useState(defaultProduct);\r\n    let { id } = useParams();\r\n    \r\n\r\n\r\n    useEffect( () => {\r\n        const service: IProductService = new ProductService();\r\n        async function fetchProduct(url: string){\r\n            const resultTuple = await service.getProduct(url);\r\n            const fetchedProduct: IProduct | null = resultTuple[0];\r\n            const errorMessage: string = resultTuple[1];\r\n            if(fetchedProduct){\r\n                setProduct(fetchedProduct);\r\n                setLoading(false); \r\n            }\r\n            else{\r\n                setHasError(true);\r\n                setErrorText(errorMessage);\r\n                setLoading(false);\r\n            }    \r\n        }\r\n\r\n        fetchProduct(`https://api.themoviedb.org/3/movie/${id}?api_key=c1f020d606cc9bf578a920d153a7c8e2&language=en-US`);\r\n               \r\n    }, [id]);\r\n\r\n\r\n\r\n\r\n    function handleAdd(e: React.MouseEvent<HTMLElement>) {\r\n        props.onAddToCart(product);\r\n    }\r\n\r\n\r\n    function getImageUrl(item: IProduct): string{\r\n        if(item.poster_path){\r\n            return `https://image.tmdb.org/t/p/w185${item.poster_path}`;\r\n        }\r\n        return 'https://i.postimg.cc/9MbvYYpr/kamera2.png';\r\n    }\r\n    \r\n\r\n    \r\n    if(hasError){\r\n        return(\r\n            <div className=\"detail\">\r\n                <Message>{errorText}</Message>\r\n                <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Back to Home</span></Link> \r\n            </div>\r\n        );\r\n           \r\n    }\r\n    if(loading){\r\n        return(\r\n            <div className=\"wait-wrapper\"><div><img src={tape} alt=\"loading\"></img></div></div>\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"detail\">\r\n        \r\n            <div className=\"detail-wrapper\">\r\n\r\n                <div className=\"text-wrapper\">\r\n\r\n                    <h2 className=\"detail-name\">{product.title}</h2>\r\n                    <p><b>{(product.release_date)? product.release_date : ''}</b></p>\r\n                    <p className=\"detail-description\">{(product.overview)? product.overview : ''}</p>\r\n                    <p>Price: <b>{200}</b> SEK</p>\r\n                    \r\n                    <button onClick={handleAdd} className=\"shop-btn movie-shop-button\">Add to cart</button>\r\n                    <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Back to products</span></Link>\r\n                        \r\n                </div>\r\n\r\n                \r\n                <div className=\"detail-image\">\r\n                    <img src={getImageUrl(product)} alt={product.title}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport './nopage.scss';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport tape from '../../shared/images/frulle.gif';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass NoPage extends React.Component {\r\n  \r\n  \r\n  render(){\r\n\r\n    return (\r\n      <div className=\"nopage\">\r\n\r\n        \r\n        <h1>404 - Page not found</h1>\r\n\r\n        <Link to=\"/\" className=\"go-home-link\"><span className=\"shop-btn movie-shop-button\">Go back Home</span></Link>\r\n\r\n        <div className=\"nopage-image\"><img src={tape} alt=\"reel of film\"></img></div>\r\n    \r\n        \r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default NoPage;","import React from 'react';\r\nimport { ICartItem } from '../../interfaces/icartitem';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport './cartitem.scss';\r\nimport IProduct from '../../interfaces/iproduct';\r\n\r\nexport interface CartItemProps {\r\n    cartItem: ICartItem;\r\n    onRemove(cartItem: ICartItem): void;\r\n    onUpdateQuantity(cartItem: ICartItem): void;    \r\n}\r\n \r\n \r\nclass CartItem extends React.Component<CartItemProps, {}> {\r\n\r\n\r\n    handleRemove(e: React.MouseEvent<HTMLElement>){\r\n        this.props.onRemove(this.props.cartItem);\r\n    }\r\n\r\n    \r\n    handleUpdateQuantity(e: React.MouseEvent<HTMLElement>, num: number){\r\n        let newQuantity: number = this.props.cartItem.quantity + num;\r\n        if(newQuantity <= 0){\r\n            newQuantity = 1;   \r\n        }\r\n        const newTotal: number = this.props.cartItem.price * newQuantity;\r\n        const updatedCartItem: ICartItem = {\r\n            product: this.props.cartItem.product,\r\n            quantity: newQuantity,\r\n            price: this.props.cartItem.price,\r\n            totalPrice: newTotal\r\n        }\r\n        this.props.onUpdateQuantity(updatedCartItem);\r\n    }\r\n\r\n\r\n    getImageUrl(item: IProduct): string{\r\n        if(item.poster_path){\r\n            return `https://image.tmdb.org/t/p/w185${item.poster_path}`;\r\n        }\r\n        return 'https://i.postimg.cc/9MbvYYpr/kamera2.png';\r\n    }\r\n    \r\n\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"cart-item\">\r\n                <div className=\"item-box\">\r\n                    <div className=\"cart-img-container\">\r\n                        <img src={this.getImageUrl(this.props.cartItem.product)} alt=\"product\"></img>\r\n                    </div> \r\n\r\n                    <div className=\"cart-item-title\"><b>{this.props.cartItem.product.title}</b></div>\r\n                </div>\r\n\r\n                <div className=\"item-box\">\r\n                    <div className=\"cart-item-price\">{this.props.cartItem.price} SEK</div>\r\n                    <div className=\"quantity-container\">\r\n                        <div className=\"counter\"><span onClick={(e) => this.handleUpdateQuantity(e, -1)}>-</span></div>\r\n                        <div className=\"cart-item-quantity\">{this.props.cartItem.quantity}</div>\r\n                        <div className=\"counter\"><span onClick={(e) => this.handleUpdateQuantity(e, 1)}>+</span></div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"item-box\">\r\n                    <div className=\"cart-item-total\"><p>Total: <b>{this.props.cartItem.totalPrice}</b> SEK</p></div>\r\n                    <div className=\"cart-remove\">\r\n                        <button onClick={this.handleRemove.bind(this)} className=\"shop-btn movie-shop-button\">Remove</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n    \r\n        );\r\n    }\r\n}\r\n \r\nexport default CartItem;","import React from 'react';\r\nimport './cart.scss';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport { ICartItem } from '../../interfaces/icartitem';\r\nimport CartItem from '../cartitem/CartItem';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from '../message/Message';\r\n\r\n\r\ninterface ICartProps {\r\n    cartItems: ICartItem[];\r\n    onRemove(cartItem: ICartItem): void;\r\n    onUpdateQuantity(cartItem: ICartItem): void; \r\n}\r\n\r\n\r\nclass Cart extends React.Component<ICartProps, {}> {\r\n  \r\n  calculateTotal(): number {\r\n    let total: number = 0;\r\n    this.props.cartItems.forEach((item)=> {\r\n      total += (item.price * item.quantity);\r\n    });\r\n    return total;\r\n  }\r\n\r\n  \r\n  render(){\r\n\r\n    if(!this.props.cartItems.length){\r\n      return (\r\n        <div className=\"cart\">\r\n          <h2>Cart</h2>\r\n          <Message>Your cart is empty</Message>\r\n          <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Back to Products</span></Link>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"cart\">\r\n          <h2>Cart</h2>\r\n          <div className=\"cart-wrapper\">\r\n            <div className=\"cart-item-wrapper\">\r\n              {this.props.cartItems.map((item) => {\r\n                  return(\r\n                    <CartItem key={item.product.id} cartItem={item} onRemove={this.props.onRemove} onUpdateQuantity={this.props.onUpdateQuantity}/>\r\n                  );    \r\n              })}\r\n            </div>\r\n            <div className=\"total\">\r\n              <p><b>Total: {this.calculateTotal()} SEK</b></p>\r\n              <Link to=\"/checkout\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Go to checkout</span></Link>\r\n              <br/> <br/> \r\n              <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Back to products</span></Link>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n  \r\nexport default Cart;","import React from 'react';\r\nimport './checkout.scss';\r\nimport '../../shared/styles/buttonclasses.scss';\r\nimport { ICartItem } from '../../interfaces/icartitem';\r\nimport { INewOrder } from '../../interfaces/ineworder';\r\nimport { INewOrderRow } from '../../interfaces/ineworderrow';\r\nimport Message from '../message/Message';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\ninterface ICheckoutProps {\r\n    cartItems: ICartItem[];\r\n    onClearCart(): void;    \r\n}\r\n\r\ninterface ICheckoutState {\r\n    order: INewOrder;\r\n    isSuccessful: boolean;\r\n}\r\n\r\n\r\n\r\nclass Checkout extends React.Component<ICheckoutProps, ICheckoutState> {\r\n    constructor(props: ICheckoutProps){\r\n        super(props);\r\n        this.state = {\r\n            order: {\r\n                companyId: 0, \r\n                created: '',\r\n                createdBy: '',\r\n                paymentMethod: '',\r\n                totalPrice: 0,\r\n                orderRows: []   \r\n            },\r\n            isSuccessful: false\r\n        }    \r\n    }\r\n    private information: string = '';\r\n\r\n    \r\n    \r\n    createOrderRows(): INewOrderRow[] {\r\n        const orderRows: INewOrderRow[] = this.props.cartItems.map((item)=>{\r\n            return {ProductId: item.product.id, Amount: item.quantity};\r\n        });\r\n        return orderRows;\r\n    }\r\n\r\n\r\n\r\n    calculateTotal(): number {\r\n        let total: number = 0;\r\n        this.props.cartItems.forEach((item)=> {\r\n            total += (item.price * item.quantity);\r\n        });\r\n        return total;\r\n    }\r\n\r\n\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        let updatedOrder = {...this.state.order};\r\n        if(e.target.type === 'radio'){\r\n            updatedOrder.paymentMethod = e.target.value;\r\n        }\r\n        else{\r\n            updatedOrder.createdBy = e.target.value;\r\n        }\r\n        this.setState({\r\n            order: updatedOrder\r\n        });\r\n    }\r\n\r\n\r\n    handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n        e.preventDefault();\r\n        if(this.state.order.createdBy && this.state.order.paymentMethod && this.props.cartItems.length){\r\n            let updatedOrder = {...this.state.order};\r\n            updatedOrder.companyId = 707;\r\n            updatedOrder.created = new Date().toLocaleString();\r\n            updatedOrder.totalPrice = this.calculateTotal();\r\n            updatedOrder.orderRows = this.createOrderRows();\r\n            \r\n            this.information = `Order was send to Outer Space ${updatedOrder.created}`;\r\n\r\n            this.props.onClearCart();\r\n            this.setState({\r\n                order: {\r\n                    companyId: 0, \r\n                    created: '',\r\n                    createdBy: '',\r\n                    paymentMethod: '',\r\n                    totalPrice: 0,\r\n                    orderRows: []    \r\n                },\r\n                isSuccessful: true \r\n            });   \r\n        }\r\n    }\r\n\r\n\r\n\r\n  \r\n    render(){\r\n\r\n        if(!this.props.cartItems.length){\r\n            return(\r\n                <div className=\"checkout\">\r\n                    <h2>Checkout</h2>\r\n\r\n                        { (this.state.isSuccessful)? \r\n                        <Message><h3>Thank You!</h3><br></br><p>{this.information}</p></Message> : \r\n                        <Message>There are no products in cart</Message> }\r\n\r\n                    <Link to=\"/\" className=\"link\"><span className=\"shop-btn movie-shop-button\">Back to Products</span></Link>\r\n\r\n                </div>    \r\n            );        \r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"checkout\">\r\n                <h2>Checkout</h2>\r\n\r\n                <div className=\"checkout-wrapper\">\r\n                    <div>\r\n                        <div className=\"order-summary\">\r\n                                <h5>Order summary</h5>\r\n                                {this.props.cartItems.map((item)=>{\r\n                                    return(<div key={item.product.id} className=\"product\"><p >{item.product.title}</p> <span><b>{item.quantity}</b> {(item.quantity > 1)? `items`: `item`}</span></div>)\r\n                                })}\r\n                                \r\n                                <p className=\"total\"><b>Total price: {this.calculateTotal()} SEK</b></p> \r\n                            </div>\r\n                        </div>\r\n                    <div>\r\n                        <div className=\"order-form\">\r\n                            <form onSubmit={(e)=>this.handleSubmit(e)}>\r\n                                <label>E-mail: <input type=\"email\" name=\"createdBy\" value={this.state.order.createdBy} onChange={(e) =>this.handleChange(e)}></input></label>     \r\n                                \r\n                                <div className=\"radio\">\r\n                                    <label><input type=\"radio\" checked={this.state.order.paymentMethod === 'MasterCard'} onChange={(e)=>this.handleChange(e)} value=\"MasterCard\"/><span>MasterCard</span></label>\r\n                                    <label><input type=\"radio\" checked={this.state.order.paymentMethod === 'Visa'} onChange={(e)=>this.handleChange(e)} value=\"Visa\"/><span>Visa</span></label>\r\n                                    <label><input type=\"radio\" checked={this.state.order.paymentMethod === 'PayPal'} onChange={(e)=>this.handleChange(e)} value=\"PayPal\"/><span>PayPal</span></label>    \r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"shop-btn full-w movie-shop-button\">Buy</button>    \r\n                            </form>        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>          \r\n        );\r\n    }\r\n}\r\n\r\n  \r\nexport default Checkout;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport './App.scss';\r\nimport Home from './components/home/Home';\r\nimport Contact from './components/contact/Contact';\r\nimport NavBar from './components/navbar/NavBar';\r\nimport Products from './components/products/Products';\r\nimport ProductDetails from './components/productdetails/ProductDetails';\r\nimport NoPage from './components/nopage/NoPage';\r\nimport Cart from './components/cart/Cart';\r\nimport IProduct from './interfaces/iproduct';\r\nimport { ICartItem } from './interfaces/icartitem';\r\nimport Checkout from './components/checkout/Checkout';\r\nimport { ProductService } from './services/ProductService';\r\n\r\n\r\n\r\ninterface IAppState {\r\n  cartItems: ICartItem[];\r\n  toggledReload: boolean;\r\n}\r\n\r\n\r\n\r\nclass App extends React.Component<{}, IAppState> {\r\n  constructor(props: any){\r\n    super(props);\r\n\r\n    this.state = {\r\n      cartItems: this.retrieveList('cartItems'),\r\n      toggledReload: false\r\n    }\r\n\r\n    this.handleAddToCart = this.handleAddToCart.bind(this);\r\n    this.handleRemoveFromCart = this.handleRemoveFromCart.bind(this);\r\n    this.handleUpdateQuantity = this.handleUpdateQuantity.bind(this);\r\n    this.handleClearCart = this.handleClearCart.bind(this);\r\n    this.handleReload = this.handleReload.bind(this);\r\n  }\r\n  private productService = new ProductService();\r\n\r\n\r\n\r\n  //Methods to handle cart\r\n\r\n  handleAddToCart(addedProduct: IProduct) {\r\n    //console.log(addedProduct);\r\n    let isInCart: boolean = false;\r\n    this.state.cartItems.forEach((item)=>{\r\n      if(item.product.id === addedProduct.id){\r\n        isInCart = true;\r\n      }\r\n    });\r\n    if(!isInCart){\r\n      const cartItem = {product: addedProduct, quantity: 1, price: 200, totalPrice: 200}; \r\n      const updatedCartItems = [...this.state.cartItems, cartItem];\r\n      this.storeList(updatedCartItems, 'cartItems');\r\n      this.setState({\r\n        cartItems: updatedCartItems\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  handleRemoveFromCart(removedCartItem: ICartItem) {\r\n    const updatedCartItems = this.state.cartItems.filter(item => {\r\n      return (item.product.id !== removedCartItem.product.id);\r\n    });\r\n    this.storeList(updatedCartItems, 'cartItems');\r\n    this.setState({cartItems: updatedCartItems});\r\n  }\r\n\r\n\r\n  handleUpdateQuantity(updatedCartItem: ICartItem) {\r\n    const updatedCartItems = [...this.state.cartItems];\r\n    //find item and replace with the updated version\r\n    updatedCartItems.forEach((item, idx)=>{\r\n      if(item.product.id === updatedCartItem.product.id){\r\n        updatedCartItems.splice(idx, 1, updatedCartItem);\r\n      }\r\n    });\r\n    this.storeList(updatedCartItems, 'cartItems');\r\n    this.setState({cartItems: updatedCartItems});\r\n  }\r\n\r\n\r\n  handleClearCart() {\r\n    const clearedCart: ICartItem[] = [];\r\n    this.storeList(clearedCart, 'cartItems');\r\n    this.setState({cartItems: clearedCart});\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //Session storage\r\n  storeList(arr: ICartItem[], storageName: string): void{\r\n    //browser has webStorage\r\n    if(typeof(Storage) !== \"undefined\"){           \r\n        sessionStorage.setItem(storageName, JSON.stringify(arr));           \r\n    }\r\n  }\r\n\r\n\r\n  retrieveList(storageName: string): ICartItem[]{\r\n    const arr: ICartItem[] = [];\r\n    //browser has webStorage\r\n    if(typeof(Storage) !== \"undefined\"){\r\n\r\n      //defined in sessionStorage\r\n      if(sessionStorage.getItem(storageName)){\r\n        let tempList: any[];\r\n        let temp: string | null = sessionStorage.getItem(storageName); \r\n        tempList = (temp)? JSON.parse(temp) : [];\r\n        \r\n        if(tempList.length > 0){\r\n            arr.length = 0;\r\n            tempList.forEach((item: any) => {\r\n                arr.push(item);\r\n            });\r\n        }\r\n      }    \r\n    }\r\n    return arr;    \r\n  }\r\n\r\n\r\n\r\n\r\n  //changes state to refetch products/ orders on current page \r\n  //when clicking link to current page e.g. in navbar\r\n  handleReload() {\r\n    let newStatus = (this.state.toggledReload)? false : true;\r\n    this.setState({toggledReload: newStatus}); \r\n  }\r\n\r\n\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"App-container\">\r\n\r\n          <NavBar cartItems={this.state.cartItems} onReload={this.handleReload}/>\r\n          \r\n          <Switch>\r\n            <Route exact path=\"/\">  \r\n              <Home service={this.productService} toggledReload={this.state.toggledReload} onReload={this.handleReload}/>    \r\n            </Route>\r\n            <Route exact path=\"/contact\">  \r\n              <Contact/>\r\n            </Route>\r\n            <Route exact path=\"/products\">  \r\n              <Products service={this.productService} toggledReload={this.state.toggledReload} onReload={this.handleReload}/>\r\n            </Route>\r\n            <Route exact path=\"/products/:id\">  \r\n              <ProductDetails onAddToCart={this.handleAddToCart}/>\r\n            </Route>\r\n            <Route exact path=\"/cart\">  \r\n              <Cart cartItems={this.state.cartItems} onRemove={this.handleRemoveFromCart} onUpdateQuantity={this.handleUpdateQuantity}></Cart>\r\n            </Route>\r\n            <Route exact path=\"/checkout\">  \r\n              <Checkout cartItems={this.state.cartItems} onClearCart={this.handleClearCart}/>\r\n            </Route>\r\n            \r\n            <Route path=\"*\"> \r\n              <NoPage/>\r\n            </Route>\r\n          </Switch>\r\n          </div>\r\n          <footer><p>&copy; 2020 Rosi Drott Kohmareh</p></footer>\r\n      </div>\r\n    );\r\n  }  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11';   //IE11\r\nimport 'react-app-polyfill/stable';  //IE11\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/frulle.ad6e003e.gif\";"],"sourceRoot":""}